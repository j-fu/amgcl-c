#include "common.hxx"

amgclcTvTiAMGSolver amgclcTvTiAMGSolverCreate(int n,Ti *ia, Ti *ja, Tv *a,char *params)
{
 int nnz=ia[n];
  
 if (params==NULL || strlen(params)==0)
   params=(char *)amgsolverparams;
 
 return create<amgclcTvTiAMGSolver,AMGSolver<Tv>,Tv,Ti >(n,ia,ja,a,params);
}

amgclcInfo amgclcTvTiAMGSolverApply(amgclcTvTiAMGSolver solver, Tv *sol, Tv *rhs)
{
  return solve<amgclcTvTiAMGSolver,AMGSolver<Tv>,Tv>(solver,sol,rhs);
}

void amgclcTvTiAMGSolverDestroy(amgclcTvTiAMGSolver solver)
{
  destroy<amgclcTvTiAMGSolver,AMGSolver<Tv>>(solver);
}

amgclcTvTiRLXSolver amgclcTvTiRLXSolverCreate(int n,Ti *ia, Ti *ja, Tv *a,char *params)
{
  if (params==NULL || strlen(params)==0)
    params=(char *)rlxsolverparams;
  return create<amgclcTvTiRLXSolver,RLXSolver<Tv>,Tv,Ti>(n,ia,ja,a,params);
}

amgclcInfo amgclcTvTiRLXSolverApply(amgclcTvTiRLXSolver solver, Tv *sol, Tv *rhs)
{
  return solve<amgclcTvTiRLXSolver,RLXSolver<Tv>, Tv>(solver,sol,rhs);
}

void amgclcTvTiRLXSolverDestroy(amgclcTvTiRLXSolver solver)
{
  destroy<amgclcTvTiRLXSolver,RLXSolver<Tv>>(solver);
}

amgclcTvTiAMGPrecon amgclcTvTiAMGPreconCreate(int n,Ti *ia, Ti *ja, Tv *a,char *params)
{
 if (params==NULL || strlen(params)==0)
   params=(char *)amgpreconparams;
 return create<amgclcTvTiAMGPrecon,AMGPrecon<Tv>,Tv,Ti>(n,ia,ja,a,params);
}

void amgclcTvTiAMGPreconApply(amgclcTvTiAMGPrecon solver, Tv *sol, Tv *rhs)
{
  apply<amgclcTvTiAMGPrecon,AMGPrecon<Tv>, Tv>(solver,sol,rhs);
}

void amgclcTvTiAMGPreconDestroy(amgclcTvTiAMGPrecon solver)
{
  destroy<amgclcTvTiAMGPrecon,AMGPrecon<Tv>>(solver);
}

amgclcTvTiRLXPrecon amgclcTvTiRLXPreconCreate(int n,Ti *ia, Ti *ja, Tv *a,char *params)
{
  if (params==NULL || strlen(params)==0)
    params=(char *)rlxpreconparams;
  return create<amgclcTvTiRLXPrecon,RLXPrecon<Tv>,Tv,Ti>(n,ia,ja,a,params);
}

void amgclcTvTiRLXPreconApply(amgclcTvTiRLXPrecon solver, Tv *sol, Tv *rhs)
{
  apply<amgclcTvTiRLXPrecon,RLXPrecon<Tv>,Tv>(solver,sol,rhs);
}

void amgclcTvTiRLXPreconDestroy(amgclcTvTiRLXPrecon solver)
{
  destroy<amgclcTvTiRLXPrecon,RLXPrecon<Tv>>(solver);
}
